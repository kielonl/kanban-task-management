generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model board {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String
  columns    column[]
}

model column {
  id         String    @id(map: "column1_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String
  board_id   String    @db.Uuid
  board      board     @relation(fields: [board_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tasks      task[]
}

model task {
  id          String    @id(map: "task1_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  title       String
  description String
  status      Status    @default(TODO)
  column_id   String    @db.Uuid
  subtasks    subtask[]
  column      column    @relation(fields: [column_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model subtask {
  id          String    @id(map: "subtask1_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  title       String
  isCompleted Boolean   @default(false)
  task_id     String    @db.Uuid
  task        task      @relation(fields: [task_id], references: [id])
}

enum Status {
  TODO
  DOING
  DONE
}
